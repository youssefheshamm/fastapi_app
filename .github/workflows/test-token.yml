# .github/workflows/release-and-docker.yml

name: Release & Docker Build

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # full history + all tags so semantic-release can pick up prior versions
          fetch-depth: 0

      - name: Ensure tags & history
        run: |
          # if repo was shallow-cloned, unshallow it; always fetch tags
          git fetch --prune --unshallow || true
          git fetch --tags

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install python-semantic-release
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release

      - name: Run semantic-release
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          # 
          # --initial-version ensures that on your very first release
          # it will start from 0.1.0 (you can bump this)
          #
          # --version-template must match how you want your tags named.
          # Default is "v{version}". If you prefer no 'v', change to "{version}".
          #
          semantic-release publish \
            --yes \
            --initial-version 0.1.0 \
            --version-template "v{version}"

      - name: Extract released version
        id: version
        run: |
          # grabs the last tag, strips the leading "v"
          NEW_TAG=$(git describe --tags --match "v*" --abbrev=0)
          VERSION=${NEW_TAG#v}
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/myapp:${{ steps.version.outputs.VERSION }}
            ghcr.io/${{ github.repository_owner }}/myapp:latest
