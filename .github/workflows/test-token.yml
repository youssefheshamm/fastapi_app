name: Semantic Release

on:
  push:
    branches: [ main, master ]

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Install Python Semantic Release
        run: pip install python-semantic-release

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if initial release is needed
        id: check_initial
        run: |
          if ! git tag --list "v*" | grep -q .; then
            echo "initial_release=true" >> $GITHUB_OUTPUT
          else
            echo "initial_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Create initial tag if needed
        if: steps.check_initial.outputs.initial_release == 'true'
        run: |
          git tag v0.1.0
          git push origin v0.1.0
          echo "Created initial tag v0.1.0"

      - name: Run Semantic Release
        if: steps.check_initial.outputs.initial_release == 'false'
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: semantic-release publish

  build-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: semantic-release
    if: needs.semantic-release.outputs.new_release_published == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=sha,prefix=,suffix=,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}